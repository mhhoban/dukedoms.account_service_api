swagger: "2.0"
info:
  title: Dukedoms of Daleria Account Service API
  version: 0.1.0

paths:
  /newAccount:
    post:
      summary: create new player account
      x-swagger-router-controller: controllers.account_creation
      operationId: create_new_account
      tags:
        - newAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newAccountRequest
          description: request to create new account
          schema:
            $ref: '#/definitions/NewAccountRequest'
      responses:
        200:
          description: Player Account Successfully Created
          schema:
            $ref: '#/definitions/NewAccountRequestSuccessful'

  /getAccountInfo/{accountId}:
    get:
      summary: get all information for given playerId
      x-swagger-router-controller: controllers.account_info
      operationId: get_player_info
      tags:
        - accountInfo
      parameters:
        in: path
        name: accountId
        type: integer
        required: true
        description: numeric id of player whose info to fetch
    responses:
      200:
        description: Player account found successfully
        schema:
          $ref: '#/definitions/accountInfo'
      404:
        description: Player id not found
  /getAccountIds/:
    get:
      summary: get ids for submitted accounts
      x-swagger-router-controller: controllers.account_info
      operationId: get_account_ids
      tags:
        - accountInfo
      parameters:
        in: body
        name: requestedAccounts
        type: object
        required: true
        schema:
          $ref: '#/definitions/RequestAccountIds'
    responses:
      200:
        description: all accounts found
        schema:
          $ref: '#/definitions/AccountIdMappings'
      404:
        description: at least one provided account not found

    /verifyAccounts:
      get:
        summary: determine if a list of accountIds exist in the system
        x-swagger-router-controller: controllers.account_info
        operationId: verify_accounts
        tags:
          - accountInfo
        parameters:
          in: body
          name: playerList
          type: object
          required: true
          schema:
            $ref: '#/definitions/PlayerVerificationRequest'
      responses:
        200:
          description: Players all exist
        404:
          description: not all players exist
          schema:
            $ref: '#/definitions/UnverifiedPlayers'

  /invitePlayers:
    post:
      summary: invite set of players to game
      x-swagger-router-controller: controllers.gameOperations
      operationId: invite_accounts
      tags:
        - gameOperations
      parameters:
        in: body
        name: invitationBatch
        type: object
        required: true
        schema:
          $ref: '#/definitions/InvitationBatch'
    responses:
      202:
        description: invitations successfully submitted
      404:
        description: at least one player not found


definitions:
  NewAccountRequest:
    type: object
    properties:
      email:
        type: string
    required:
      - email
  NewAccountRequestSuccessful:
    type: object
    properties:
      email:
        type: string
      accountId:
        type: integer
  accountInfo:
    type: object
    properties:
      email:
        type: string
      accountId:
        type: integer
      activePlayerIds:
        type: object
      pendingPlayerIds:
        type: object
      gameInvitations:
        type: array
        items:
          type: integer
  PlayerVerificationRequest:
    type: array
    items:
      type: string
  UnverifiedPlayers:
    type: array
    items:
      type: string
  RequestAccountIds:
    type: array
    items:
      type: string
  AccountIdMappings:
    type: array
    items:
      type: object
      schema:
        $ref: '#/definitions/AccountIdMapping'
  AccountIdMapping:
    type: object
    properties:
      playerEmail:
        type: string
      playerId:
        type: integer
  InvitationBatch:
    type: object
    properties:
      gameId:
        type: integer
      playerList:
        type: array
        items:
          type: string
